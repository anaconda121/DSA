class SolvingQuestionsBrainpower {
    long[] dp;

    long traverse(int curr, int[][] questions) {
        if (curr >= questions.length) return 0;
        if (dp[curr] != -1) return dp[curr];

        long take = questions[curr][0] + traverse(curr + questions[curr][1] + 1, questions);
        long skip = traverse(curr + 1, questions);
        dp[curr] = Math.max(take, skip);
        return dp[curr];
    }

    public long mostPoints(int[][] questions) {
        dp = new long[questions.length];
        Arrays.fill(dp, -1);

        traverse(0, questions);

        long res = Long.MIN_VALUE;
        for (long i : dp) {
            res = Math.max(res, i);
        }
        
        return res;
    }
}
